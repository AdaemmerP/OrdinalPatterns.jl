---
engine: julia
---

# rl_sop_oc {#sec-doc}
    

::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
rl_sop_oc(

```

spatial*dgp::SpatialDGP, lam, cl, lookup*array*sop, p*reps::UnitRange{Int}, dist*error::UnivariateDistribution,   dist*ao::Union{Nothing,UnivariateDistribution}, chart_choice, m, n, d1::Int, d2::Int   )
 
Computes the run length for a given out-of-control DGP. The input parameters are:
 
  * `spatial_dgp::SpatialDGP`: A struct for the out-of-control spatial DGP.
  * `lam::Float64`: A scalar value for lambda for the EWMA chart.
  * `cl::Float64`: A scalar value for the control limit.
  * `lookup_array_sop::Array{Int, 4}`: A 4D array with the lookup array for the sops,
which will be computed computed using `lookup_array_sop = compute_lookup_array_sop()`.
 
  * `p_reps::UnitRange{Int}`: A range of integers for the number of repetitions.
  * `dist_error::UnivariateDistribution`: A distribution for the error term. Here you can use any
univariate distribution from the `Distributions.jl` package.
 
  * `dist_ao::Union{Nothing,UnivariateDistribution}`: A distribution for the additive outlier.
  * `chart_choice::Int`: An integer value for the chart choice. The options are 1-4.
  * `m::Int`: An integer value for the number of rows for the final "SOP" matrix.
  * `n::Int`: An integer value for the number of columns for the final "SOP" matrix.
  * `d1::Int`: An integer value for the first delay (d₁).
  * `d2::Int`: An integer value for the second delay (d₂).


:::
    

