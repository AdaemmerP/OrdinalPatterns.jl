---
engine: julia
---

# SQMA11 {#sec-doc}
    

::: {.callout-note appearance="simple" title="docblock" collapse=false}    


```{julia}
#| eval: false
SQMA11(dgp_params, eps_params, M_rows, N_cols, dist, dist_ao, prerun)

```

A struct to define a Spatial quadratic moving-average (SQMA(1, 1)):
 
$\qquad  Y_{t_1, t_2}=\beta_1 \cdot \varepsilon_{t_1-1, t_2}^a+\beta_2 \cdot \varepsilon_{t_1, t_2-1}^b+\beta_3 \cdot \varepsilon_{t_1-1, t_2-1}^c+\varepsilon_{t_1, t_2}$
 
  * `dgp_params::Tuple(β₁::Float64, β₂::Float64, β₃::Float64)`: A tuple of the parameters of the DGP. The first element is the parameter β₁, the second element is the parameter β₂, and the third element is the parameter β₃.
  * `eps_params::Tuple(a::Int, b::Int, c::Int)`: A tuple of the parameters of the DGP, indicating which error terms shall be squared. Note that `eps_params` ∈ {1, 2}.
  * `M_rows::Int`: The number of rows for the final "SOP" matrix. Note that the final spatial matrix ("picture") equals m + 1.
  * `N_cols::Int`: The number of columns for the final "SOP" matrix. Note that the final spatial matrix ("picture") equals n + 1.
  * `dist::Distribution` A distribution for \varepsilon*{t*1, t_2}. You can use any univariate distribution from the `Distributions.jl` package.
  * `dist_ao::Nothing`.

```{julia}
#| eval: false
sqma11 = SQMA11((0.5, 0.3, 0.2), (1, 1, 2), 10, 10, Normal(0,1), nothing, 1)

```



:::
    

